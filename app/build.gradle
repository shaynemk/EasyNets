apply plugin: 'com.android.application'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def minorCount = 0;

        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            minorCount = 1;
        }

        def version_Build = versionProps['VERSION_BUILD'].toInteger() + 1;
        def version_Minor = versionProps['VERSION_MINOR'].toInteger() + minorCount;
        def version_Major = versionProps['VERSION_MAJOR'].toInteger();
        def version_Name = version_Major.toString() + "." + version_Minor.toString() + "-" + version_Build.toString()

        versionProps['VERSION_BUILD'] = version_Build.toString()
        versionProps['VERSION_MINOR'] = version_Minor.toString()
        versionProps['VERSION_NAME'] = version_Name
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.keller23.android.easynets"
            minSdkVersion 16
            targetSdkVersion 20
            versionCode version_Build
            versionName version_Name
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    defaultConfig {
        applicationId "com.keller23.android.easynets"
        minSdkVersion 16
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar','*.aar'])
}
